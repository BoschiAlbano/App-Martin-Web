import React, { useState, useEffect } from 'react';
import Head from 'next/head'
import MenuPaginas from 'components/menu/menuPaginas';
import { getSession } from 'next-auth/react'
import Spinner from 'components/Spinner';
import { useRubroMarca, useArticuloFiltro, useArticulos } from 'components/prueba/articulos/hook'
import Card from 'components/card/index'
import styles from 'styles/ArticuloCard.module.css'
import FiltroArt from 'components/filtroArt';
import { useLocalStorage } from 'components/prueba/localStorage/hook';
import Swal from 'sweetalert2'


const Articulos = ({ session }) => {
  const [value, setvalue] = useLocalStorage('Carrito', [])

  const AgregarCarrito = (articulo) => {

    try {

      // Datos local Storage - id descripcion imagen cantidad precio
      const { id, descripcion, imagen, precio } = articulo
      // buscar si ya existe el art y aumentar la cantidad
      const indice = value.findIndex(art => art.id === articulo.id)

      if (indice < 0) {
        // agregar
        const Add = value
        Add.push({ id, descripcion, imagen, precio, cantidad: 1 })
        setvalue(Add)
      } else {
        // modificar cantidad
        const actualizar = value
        actualizar[indice].cantidad += 1
        setvalue(actualizar)
      }

      // Alerta

      Swal.fire({
        icon: 'success',
        title: 'Agregando al Carrito...',
        timer: 2500
      })

    } catch (error) {
      console.log(error.message)
      Swal.fire({
        icon: 'error',
        title: 'Se Produjo un error Grabe.',
        timer: 2500
      })
    }

  }

  const { data, loading, error } = useRubroMarca()

  const articulos = useArticulos()

  const [dataArticulos, setData] = useState(null);
  const [getData, result] = useArticuloFiltro()


  useEffect(() => {
    if (!articulos.loading) {
      if (articulos.data) {
        setData(articulos.data.GET_Articulo)
      }
    }
  }, [articulos.loading]);

  useEffect(() => {
    if (result.data) {
      setData(result.data.FILTRO_Articulo)
    }
  }, [result]);

  const filtro = ({ keyword, rubro, marca }) => {
    getData({ variables: { keyword, rubro, marca } })
  }

  if (error) return <span className="text-red-600">{error}</span>
  if (articulos.error) return <span className="text-red-600">{articulos.error}</span>

  return (
    <div>
      <Head>
        <title>Articulos</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <MenuPaginas user={session.user}>
        <div className=" w-[90%] ml-[5%] grid grid-cols-1">

          {

            loading ? <div className="w-full flex flex-col items-center"><Spinner /></div>
              : <FiltroArt datos={data} filtro={filtro}></FiltroArt>

          }

          {
            dataArticulos === null ? <div className="w-full flex flex-col items-center"><Spinner /></div>
              : <div className={styles.contenedor_Articulos_Card}>
                {dataArticulos.map((item, index) => {
                  return (
                    <Card key={index} articulo={item} AgregarCarrito={AgregarCarrito} />
                  )
                })}
              </div>
          }

        </div>

      </MenuPaginas>
    </div>
  );
}

export default Articulos;


export async function getServerSideProps(context) {

  const session = await getSession(context)

  if (!session) {
    return {
      redirect: {
        destination: '/login',
        permanent: false
      }
    }
  }

  if (session?.error) {
    console.log(session.error)
  }

  return {
    props: { session }
  }
}